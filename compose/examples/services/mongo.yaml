# https://w7.pngwing.com/pngs/956/695/png-transparent-mongodb-original-wordmark-logo-icon-thumbnail.png
version: "3.9"

x-omnistrate-integrations:
  - omnistrateLogging
  - omnistrateMetrics

services:
  cluster:
    x-omnistrate-mode-internal: false
    image: docker.io/omnistrate/mongodb:6.0-3
    ports:
      - '27017:27017'
    environment:
      - SECURITY_CONTEXT_USER_ID=999
      - SECURITY_CONTEXT_GROUP_ID=999
      - SECURITY_CONTEXT_FS_GROUP=999
      - MONGO_INITDB_ROOT_USERNAME=$var.mongodbUsername
      - MONGO_INITDB_ROOT_PASSWORD=$var.mongodbPassword
      - REPLICA_SET_KEY=$var.mongodbReplicaSetKey
      - REPLICA_SET_NAME=replica
    x-omnistrate-actionhooks:
      - scope: CLUSTER
        type: INIT
        commandTemplate: |
          #!/bin/bash
          
          set -ex
          mongosh "mongodb://{{ $var.mongodbUsername }}:{{ $var.mongodbPassword }}@{{ $sys.compute.nodes[0].name }}:27017/?authMechanism=DEFAULT" --eval 'try { rs.status() } catch (e) { rs.initiate(); }'
          mongosh "mongodb://{{ $var.mongodbUsername }}:{{ $var.mongodbPassword }}@{{ $sys.compute.nodes[0].name }}:27017/?authMechanism=DEFAULT" --eval 'cfg = rs.conf(); cfg.members[0].host = "{{ $sys.network.node.externalEndpoint }}:27017"; rs.reconfig(cfg)'

      - scope: NODE
        type: ADD
        commandTemplate: |
          #!/bin/bash
          set -ex
          
          # Check if NODE_NAME is not equal to 'mongodb-primary-0'
          if [ "$NODE_NAME" != {{ $sys.compute.nodes[0].name }} ]; then
              # Run the mongosh command
              mongosh "mongodb://{{ $var.mongodbUsername }}:{{ $var.mongodbPassword }}@{{ $sys.compute.nodes[0].name }}:27017/?authMechanism=DEFAULT" --eval "rs.add( { host: '{{ $sys.network.node.externalEndpoint }}:27017' } )"
          fi

      - scope: NODE
        type: REMOVE
        commandTemplate: |
          #!/bin/bash
          
          set -ex
          
          # Check if NODE_NAME is not equal to 'mongodb-primary-0'
          if [ "$NODE_NAME" != {{ $sys.compute.nodes[0].name }} ]; then
              # Run the mongosh command
              mongosh "mongodb://{{ $var.mongodbUsername }}:{{ $var.mongodbPassword }}@{{ $sys.compute.nodes[0].name }}:27017/?authMechanism=DEFAULT" --eval "rs.remove('{{ $sys.network.node.externalEndpoint }}:27017')"
          fi

    x-omnistrate-compute:
      instanceTypes:
        - cloudProvider: aws
          apiParam: instanceType
        - cloudProvider: gcp
          apiParam: instanceType
        - cloudProvider: azure
          apiParam: instanceType
    x-omnistrate-capabilities:
      autoscaling:
        minReplicas: 1
        maxReplicas: 2
      enableMultiZone: true
      enableEndpointPerReplica: true
    volumes:
      - source: ./mongodb_master_data
        target: /data/db
        type: bind
        x-omnistrate-storage:
          aws:
            instanceStorageType: AWS::EBS_GP3
            instanceStorageSizeGi: 10
            instanceStorageIOPS: 3000
            instanceStorageThroughputMiBps: 125
          gcp:
            instanceStorageType: GCP::PD_BALANCED
            instanceStorageSizeGi: 10
          azure:
            instanceStorageType: AZURE::PREMIUM_SSD
            instanceStorageSizeGi: 10
    x-omnistrate-api-params:
      - key: instanceType
        description: Instance Type
        name: Instance Type
        type: String
        modifiable: true
        required: true
        export: true
      - key: mongodbPassword
        description: Default DB Password
        name: Password
        type: Password
        modifiable: false
        required: true
        export: false
      - key: mongodbUsername
        description: Default DB Username
        name: Username
        type: String
        modifiable: false
        required: true
        export: true
      - key: mongodbReplicaSetKey
        description: Replica Set Key
        name: Replica Set Key
        type: String
        modifiable: false
        required: true
        export: true
